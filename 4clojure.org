#+TITLE: 4Clojure
#+CREATED: 2020-05-28
#+ROAM_ALIAS:
#+ROAM_TAGS: clojure

Annotated solutions to 4Clojure's [[file:clojure.org][Clojure]] problems.

* Elementary
** 1. Nothing but the Truth

This is a clojure form. Enter a value which will make the form evaluate to true.

#+BEGIN_SRC clojure
(defn nothing-but-truth []
  (= true true))
#+END_SRC
** 2. Simple Math

If you are not familiar with polish notation, simple arithmetic might seem confusing.

#+BEGIN_SRC clojure
(defn simple-math []
  (= (- 10 (* 2 3)) 4))
#+END_SRC
** 3. Intro to Strings

Clojure strings are Java strings. This means that you can use any of the Java string methods on Clojure strings.

#+BEGIN_SRC clojure
(defn intro-to-strings []
    (= "HELLO WORLD" (.toUpperCase "hello world")))
#+END_SRC

** 4. Intro to Lists

Lists can be constructed with either a function or a quoted form.

#+BEGIN_SRC clojure
(do
  (defn intro-to-lists []
    (= (list :a :b :c) '(:a :b :c)))
  (intro-to-lists))
#+END_SRC

#+RESULTS:
: true

** 5. Lists: conj

When operating on a list, the conj function will return a new list with one or more items "added" to the front.

#+BEGIN_SRC clojure
(do
  (defn lists-conj []
    (= '(1 2 3 4) (conj '(2 3 4)))
    (= '(1 2 3 4 (conj '(3 4) 2 1))))
  (lists-conj))
#+END_SRC

#+RESULTS:
: true
